package rp.assignments.individual.ex1;

import lejos.util.Delay;
import rp.robotics.DifferentialDriveRobot;
import rp.robotics.TouchSensorEvent;
import rp.robotics.TouchSensorListener;
import rp.systems.ControllerWithTouchSensor;
import rp.systems.StoppableRunnable;
import rp.systems.WheeledRobotSystem;

/**
 * 
 * Very empty example controller structure.
 * 
 * @author Nick Hawes
 *
 */
public class TouchSensor implements StoppableRunnable, TouchSensorListener, ControllerWithTouchSensor{
	
	private DifferentialDriveRobot robot;
	
	public TouchSensor(DifferentialDriveRobot _robot){
		this.robot= _robot;
	}

	

	@Override
	public void sensorPressed(TouchSensorEvent _e) {
		// TODO Auto-generated method stub
		robot.getDifferentialPilot().rotate(180);
		robot.getDifferentialPilot().forward();
	}

	@Override
	public void sensorReleased(TouchSensorEvent _e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void sensorBumped(TouchSensorEvent _e) {
		// TODO Auto-generated method stub
		
	}



	@Override
	public void run() {
		// TODO Auto-generated method stub
		robot.getDifferentialPilot().forward();
	}



	@Override
	public void stop() {
		// TODO Auto-generated method stub
		
	}

}
